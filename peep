#!/usr/bin/env bash
# SYNOPSIS  peep is a super simple note management tool for the Bash command line
# AUTHOR    Christopher Engelmann
# URL       https://github.com/webcitizen-de/peep

instdir=$(dirname $BASH_SOURCE)
script_name=$(basename $BASH_SOURCE)
script_path="$instdir/$script_name"
config_file="peep.config"
[[ ! -f $path_notes/.trash ]] && mkdir "$path_notes/.trash"

if [[ -f $config_file ]]; then
    source "$config_file"
else
    echo "Error. Missing configuration file '$config_file'"
    exit 1
fi

clear

function create_file() {

    echo "The note '${1}' doesn't exist yet!"
    echo "Do you like to create it now? [y|n] "
    read answer
    if [[ $answer == "y" ]]; then
        echo
        eval "$editor" "$editor_opt" "$path_notes/$1"
    fi
}

function print_help() {

    echo "Syntax: peep [ [e|edit] [d|delete] ] NOTENAME"
    echo "        peep notes | [empty] trash | config"
    echo
    echo "Create a new note just type:  peep YOUR_NOTENAME"
    echo "Edit a existing file:         peep e YOUR_NOTENAME  OR  peep edit YOUR_NOTENAME"
    echo "List all available notes:     peep notes"
    echo
    echo "Move a note to the trash:     peep d YOUR_NOTENAME  OR  peep delete YOUR_NOTENAME"
    echo "Show the notes in trash:      peep trash"
    echo "Empty the trash:              peep empty trash"
    echo
    echo "Edit the configuration:       peep config"
    echo
}


# concatenate all parameters which makes the evaluation within the case statement easier
parameters="$1 $2"

case "$parameters" in
    "config ")
        eval "$editor" "$config_file"
    ;;

    "d "*|"delete "*)
        if [[ -f $path_notes/$2 ]]; then
            mv -f "$path_notes/$2" "$path_notes/.trash"
        else
            echo "Could not delete the note $1 since it does not exist."
        fi
    ;;

    "empty trash")
        echo "ATTENTION: I going to delete all of these files for good:"
        echo
        command ls -FG "$path_notes/.trash"
        echo
        echo "Please confirm that operation (yes)"
        read -p "--> " confirmation

        if [[ $confirmation == "yes" ]]; then
            eval rm -f "$path_notes/.trash/*"
        else
            echo "Execution aborted"
        fi
    ;;

    "e "*|"edit "*)
        if [[ -f $path_notes/$2 ]]; then
            eval $editor $editor_opt "$path_notes/$2"

        elif [[ $2 != "" ]]; then
            create_file "$2"

        elif [[ $2 == "" ]]; then
            eval $editor $editor_opt "$path_notes/default"
        fi
    ;;

    "notes ")
        echo "$path_notes"
        command ls -FG "$path_notes"
    ;;

    " ")
        print_help
    ;;

    "trash ")
        echo "$path_notes/.trash"
        command ls -FG "$path_notes/.trash"
    ;;

    *)
        if [[ -f $path_notes/$1 ]]; then
            eval "$printing_tool" "$path_notes/$1"

        elif [[ $2 == "" ]]; then
            create_file "$1"

        else
            print_help
        fi
    ;;
esac
